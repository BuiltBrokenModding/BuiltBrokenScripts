buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.se.bjurr.gitchangelog:git-changelog-gradle-plugin:1.60"
  }
}

apply plugin: "se.bjurr.gitchangelog.git-changelog-gradle-plugin"

/**
 * Generates a Bamboo XML changelog via the REST API.
 */
task("createChangelog").doLast {
    //defines the bambo url
    def bambooURL = "http://build.endermedia.com/"

    /**
     * Create a new file
     */
    def file = new FileOutputStream("changelog.xml")
    def out = new BufferedOutputStream(file)

    /**
     * Grab the build first, parse the XML to find the changelog XML URL
     */
     //reads the bamboo rest api with the project arguments.
    def changesXML = new XmlSlurper().parse(bambooURL + "rest/api/latest/result/" + project.bambooPlanKey + "/" + project.bambooBuildNumber + "?expand=changes.change")
    def changes = changesXML.changes

    /**
     * Add the XML definition header in the front of the file and remove all other occurrences of the XML header
     */
    out << ("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><changes>")

    println("createChangelog: Identified " + changes.size() + " changes to be written into the changelog.")


    for (int i = 0; i < changes.size(); i++) {
        /**
         * Write each changelog XML into the URL
         */
        def changelogURL = bambooURL + "rest/api/latest/result/" + project.bambooPlanKey + "/" + project.bambooBuildNumber + "?expand=changes.change" + changes[i].@id.text()
        out << new URL(changelogURL).getText().replaceAll("<\\?xml version=\"1\\.0\" encoding=\"UTF-8\" standalone=\"yes\"\\?>", "")
    }
    println("Looking in " + changesXML + "found" + changes.size() )

    out << "</changes>"

    out.close()
}

task makeChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    //filePath = "changelog.html"
    file = new File("changelog.html");
    untaggedName = "Current release ${project.version}"
    fromRef = startGitRev
    toRef =  "HEAD"
    templateContent = """
{{#tags}}
<h1> Highly untested and may break world</h1>
  <h3>{{name}}</h3>
  <ul>
    {{#commits}}
    <li> <a href="https://github.com/{{ownerName}}/{{repoName}}/commit/{{hash}}" target=_blank> {{{message}}}</a>
</li>
    {{/commits}}
  </ul>
{{/tags}}
"""
}

tasks.build.dependsOn makeChangelog
