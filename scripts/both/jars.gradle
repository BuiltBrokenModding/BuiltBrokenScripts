buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.ajoberstar:grgit:2.1.0"
  }
}

apply plugin: "org.ajoberstar.grgit"

if (!project.hasProperty("bambooshortPlanName"))
    ext.bambooshortPlanName = ""

apply from: 'https://raw.githubusercontent.com/BuiltBrokenModding/BuiltBrokenScripts/universal/scripts/both/printdeps.gradle'

javadoc {
    source = sourceSets.main.allJava
}


ext.CurrentJVM = {
    def currentJvm = org.gradle.internal.jvm.Jvm.current()
}

def currentJvm = org.gradle.internal.jvm.Jvm.current()
println "Current Java version = " + currentJvm

/*
Creats a shared Manifest for each jar to prevent copy and paste stuff.

*/
if (project.hasProperty("coremod"))
    {
    ext.sharedManifest = manifest {
    attributes("Built-By": System.getProperty('user.name'),
               "Created-By": project.CurrentJVM,
               "Implementation-Title": archivesBaseName,
               "Implementation-Version": version,
               "Git-Hash": ext.GitHash,
               "FMLCorePlugin": coremod,
               "FMLCorePluginContainsFMLMod": "true")
    }
}
else
{
    ext.sharedManifest = manifest {
    attributes("Built-By": System.getProperty('user.name'),
               "Created-By": project.CurrentJVM,
               "Implementation-Title": archivesBaseName,
               "Implementation-Version": version,
               "Git-Hash": ext.GitHash
    }
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
     from javadoc.destinationDir
     if (project.getProperty("bambooshortPlanName") == "BBM-Dev") classifier = "javadoc-dev"
     else classifier = "javadoc"
     //sets where the jars go to.
     destinationDir = file 'output'
     mustRunAfter "sourceMainScala"
}

task deobfJar(type: Jar) {
     from sourceSets.main.output
     //if project name is BBM-Dev it makes the deobf jar deobf-dev if not its just deobf
     if (project.getProperty("bambooshortPlanName") == "BBM-Dev") classifier = "deobf-dev"
     else classifier = "deobf"
     //sets where the jars go to.
     destinationDir = file 'output'
     manifest = project.manifest {
        from sharedManifest
    }
     mustRunAfter "jar" 
}

task sourcesJar(type: Jar) {
     from sourceSets.main.allJava
     if (project.getProperty("bambooshortPlanName") == "BBM-Dev") classifier = "src-dev"
     else classifier = "src"
     //sets where the jars go to.
     destinationDir = file 'output'
     manifest = project.manifest {
        from sharedManifest
     }
     mustRunAfter "jar"
}

//copies the build.properties to the output dir for maven publishing.
task copyBuildXml(type: Copy) {
     from 'gradle.properties'
     into 'output'
}

jar {
     dependsOn copyBuildXml, printDeps
     //if project has the property BBM-Dev then it appends dev to indicate the dev branch
     /*if (project.getProperty("bambooshortPlanName") == "BBM-Dev") classifier = "dev-universal"
     else classifier = "universal"*/
     //sets where the jars go to.
     destinationDir = file 'output'
     manifest = project.manifest {
        from sharedManifest
     
     }
}
tasks.build.dependsOn deobfJar